"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[5290],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3968:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s=["components"],i={sidebar_position:1},c="DSLs",l={unversionedId:"wasm/stack/dsls",id:"wasm/stack/dsls",title:"DSLs",description:"ink!",source:"@site/docs/wasm/stack/dsls.md",sourceDirName:"wasm/stack",slug:"/wasm/stack/dsls",permalink:"/docs/wasm/stack/dsls",editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/wasm/stack/dsls.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Astar Wasm Stack",permalink:"/docs/wasm/stack/"},next:{title:"Nodes and Clients",permalink:"/docs/wasm/stack/nodes-clients"}},p={},u=[{value:"<code>ink!</code>",id:"ink",level:2},{value:"<code>ask!</code>",id:"ask",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dsls"},"DSLs"),(0,o.kt)("h2",{id:"ink"},(0,o.kt)("inlineCode",{parentName:"h2"},"ink!")),(0,o.kt)("p",null,"ink! is an eDSL written in Rust and developed by Parity. It targets specifically the API of substrate\u2019s ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts"),"."),(0,o.kt)("p",null,"ink! offers Rust ",(0,o.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/reference/procedural-macros.html#procedural-macro-hygiene"},"procedural macros")," and a list of crates to facilitate development and avoid boilerplate code."),(0,o.kt)("p",null,"Check the official documentation [",(0,o.kt)("a",{parentName:"p",href:"https://ink.substrate.io/why-rust-for-smart-contracts"},"here"),"] and the ",(0,o.kt)("inlineCode",{parentName:"p"},"ink!")," GitHub repo ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paritytech/ink"},"here"),"."),(0,o.kt)("h2",{id:"ask"},(0,o.kt)("inlineCode",{parentName:"h2"},"ask!")),(0,o.kt)("p",null,"ask! is a framework for AssemblyScript developers to write Wasm smart contracts for ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts"),". Its syntax is similar to TypeScript."),(0,o.kt)("p",null,"This project is funded by Polkadot treasury - link ",(0,o.kt)("a",{parentName:"p",href:"https://polkadot.polkassembly.io/post/949"},"here"),". It is still under development - no release is available at the moment."),(0,o.kt)("p",null,"Check the official GitHub ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ask-lang/ask"},"here"),"."))}m.isMDXComponent=!0}}]);