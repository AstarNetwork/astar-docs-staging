"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[682],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return p}});var n=r(7294);function o(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function c(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?c(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},c=Object.keys(t);for(n=0;n<c.length;n++)r=c[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(n=0;n<c.length;n++)r=c[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var s=n.createContext({}),l=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},u=function(t){var e=l(t.components);return n.createElement(s.Provider,{value:e},t.children)},f={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,o=t.mdxType,c=t.originalType,s=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=l(r),p=o,d=m["".concat(s,".").concat(p)]||m[p]||f[p]||c;return r?n.createElement(d,a(a({ref:e},u),{},{components:r})):n.createElement(d,a({ref:e},u))}));function p(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var c=r.length,a=new Array(c);a[0]=m;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:o,a[1]=i;for(var l=2;l<c;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3876:function(t,e,r){r.r(e),r.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return f}});var n=r(7462),o=r(3366),c=(r(7294),r(3905)),a=["components"],i={sidebar_position:6},s="FAQ for Smart Contracts",l={unversionedId:"xcm/building-with-xcm/faq-for-smart-contracts",id:"xcm/building-with-xcm/faq-for-smart-contracts",title:"FAQ for Smart Contracts",description:"Q: Unable to use transferFrom for XC20 (DOT, KSM...) in Solidity contract",source:"@site/docs/xcm/building-with-xcm/faq-for-smart-contracts.md",sourceDirName:"xcm/building-with-xcm",slug:"/xcm/building-with-xcm/faq-for-smart-contracts",permalink:"/docs/xcm/building-with-xcm/faq-for-smart-contracts",editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/xcm/building-with-xcm/faq-for-smart-contracts.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Client Applications",permalink:"/docs/xcm/building-with-xcm/client-applications"},next:{title:"XCM Asset List",permalink:"/docs/xcm/asset-list"}},u={},f=[{value:"Q: Unable to use <code>transferFrom</code> for XC20 (DOT, KSM...) in Solidity contract",id:"q-unable-to-use-transferfrom-for-xc20-dot-ksm-in-solidity-contract",level:2}],m={toc:f};function p(t){var e=t.components,r=(0,o.Z)(t,a);return(0,c.kt)("wrapper",(0,n.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"faq-for-smart-contracts"},"FAQ for Smart Contracts"),(0,c.kt)("h2",{id:"q-unable-to-use-transferfrom-for-xc20-dot-ksm-in-solidity-contract"},"Q: Unable to use ",(0,c.kt)("inlineCode",{parentName:"h2"},"transferFrom")," for XC20 (DOT, KSM...) in Solidity contract"),(0,c.kt)("p",null,"An EVM smart contract (using XC20) also needs native token (ASTR, SDN, SBY) balance. In order for a contract to accept native tokens the contract needs payable function."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-solidity"},"function () public payable {}\n")))}p.isMDXComponent=!0}}]);