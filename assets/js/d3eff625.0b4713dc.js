"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[9578],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3038:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=["components"],i={sidebar_position:1},s="Wasm Development Environment Setup",l={unversionedId:"wasm/sc-dev/env-setup",id:"wasm/sc-dev/env-setup",title:"Wasm Development Environment Setup",description:"Install and Configure the Rust Toolchain",source:"@site/docs/wasm/sc-dev/env-setup.md",sourceDirName:"wasm/sc-dev",slug:"/wasm/sc-dev/env-setup",permalink:"/docs/wasm/sc-dev/env-setup",editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/wasm/sc-dev/env-setup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Community",permalink:"/docs/wasm/advanced/community"},next:{title:"ink! Development",permalink:"/docs/wasm/sc-dev/ink-dev"}},u={},p=[{value:"Install and Configure the Rust Toolchain",id:"install-and-configure-the-rust-toolchain",level:2},{value:"<code>cargo-contract</code> CLI",id:"cargo-contract-cli",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"wasm-development-environment-setup"},"Wasm Development Environment Setup"),(0,o.kt)("h2",{id:"install-and-configure-the-rust-toolchain"},"Install and Configure the Rust Toolchain"),(0,o.kt)("p",null,"Install Rust by running the following shell commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Install\ncurl --proto '=https' --tlsv1.2 -sSf <https://sh.rustup.rs> | sh\n# Configure\nsource ~/.cargo/env\n")),(0,o.kt)("p",null,"Configure to the latest stable and add nightly + Wasm target"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rustup default stable\nrustup update\nrustup update nightly\nrustup target add wasm32-unknown-unknown --toolchain nightly\n")),(0,o.kt)("p",null,"ink! contracts use ",(0,o.kt)("inlineCode",{parentName:"p"},"nightly")," version of Rust, so you can also set up default to nightly (optional)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rustup default nightly\n")),(0,o.kt)("h2",{id:"cargo-contract-cli"},(0,o.kt)("inlineCode",{parentName:"h2"},"cargo-contract")," CLI"),(0,o.kt)("p",null,"To build contracts, you will need to install ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paritytech/cargo-contract"},(0,o.kt)("inlineCode",{parentName:"a"},"cargo-contract")),". You can find the installation instructions ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paritytech/cargo-contract#installation"},"here"),"."))}m.isMDXComponent=!0}}]);