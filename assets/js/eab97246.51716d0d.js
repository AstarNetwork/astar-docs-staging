"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[9898],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(a),d=n,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return a?r.createElement(f,o(o({ref:t},l),{},{components:a})):r.createElement(f,o({ref:t},l))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5125:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],s={sidebar_position:2},p="Gas Price API",c={unversionedId:"integrations/gas_api",id:"integrations/gas_api",title:"Gas Price API",description:"Overview",source:"@site/docs/integrations/gas_api.md",sourceDirName:"integrations",slug:"/integrations/gas_api",permalink:"/docs/integrations/gas_api",editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/integrations/gas_api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Faucets",permalink:"/docs/integrations/faucet"},next:{title:"Defi Llama",permalink:"/docs/integrations/dapp-listing/defillama"}},l={},u=[{value:"Overview",id:"overview",level:2},{value:"API",id:"api",level:2},{value:"Response",id:"response",level:2},{value:"Response parameters",id:"response-parameters",level:2}],m={toc:u};function d(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gas-price-api"},"Gas Price API"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Gas is the unit of measure for how much computational work is required to process transactions and smart contracts. Essentially a transaction fee, the term originates from Ethereum, in which context it refers to computation undertaken on the Ethereum Virtual Machine (EVM). Since Ethereum was founded, numerous EVM-compatible networks have emerged and adopted similar models."),(0,i.kt)("p",null,"The term can be considered analogous to the gas that powers a car engine: it's the fluctuating, occasionally expensive cost of operation. More complex smart contracts require more gas to power their computation, just as a bigger, more powerful car takes more gas to run."),(0,i.kt)("p",null,"Gas price api is a service that allows you to get the various gas prices of the astar network for various transaction times. Gas fee are provided in wei."),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Shibuya: ",(0,i.kt)("a",{parentName:"li",href:"https://astar-gas-station.herokuapp.com/api/shibuya/gasnow"},"https://astar-gas-station.herokuapp.com/api/shibuya/gasnow")),(0,i.kt)("li",{parentName:"ul"},"Shiden: ",(0,i.kt)("a",{parentName:"li",href:"https://astar-gas-station.herokuapp.com/api/shiden/gasnow"},"https://astar-gas-station.herokuapp.com/api/shiden/gasnow")),(0,i.kt)("li",{parentName:"ul"},"Astar: ",(0,i.kt)("a",{parentName:"li",href:"https://astar-gas-station.herokuapp.com/api/astar/gasnow"},"https://astar-gas-station.herokuapp.com/api/astar/gasnow"))),(0,i.kt)("h2",{id:"response"},"Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "code": 200,\n  "data": {\n    "slow": 1265049135,\n    "average": 2233842329,\n    "fast": 10261948525,\n    "timestamp": 1651782278481,\n    "eip1559": {\n      "priorityFeePerGas": {\n        "slow": 265049135,\n        "average": 1233842329,\n        "fast": 9261948525\n      },\n      "baseFeePerGas": 1000000000\n    }\n  }\n}\n')),(0,i.kt)("h2",{id:"response-parameters"},"Response parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"slow: The gas price for a transaction that takes a long time to execute.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"average: The gas price for a transaction that takes a medium time to execute.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"fast: The gas price for a transaction that takes a short time to execute.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"eip1559:"))),(0,i.kt)("p",null,"With EIP1559 transactions gas fee are divided in two parts: base fee and priority fee."),(0,i.kt)("p",null,"The Base Fee, which is determined by the network itself. And is same for a block.\nPriority Fee, which is optional, determined by the user, is a tip to validators, and incentivizes them to prioritize your transaction."),(0,i.kt)("p",null,"EIP-1559's purpose is essentially to make gas fees more transparent and predictable for users. Previously, to have your transaction processed, you essentially had to 'bid' with a high enough total fee to make sure the miner was incentivized to pick up your transaction reasonably soon. This meant the market price was constantly moving according to demand."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"priorityFeePerGas: The variable part of the gas fee. Determined by the user."),(0,i.kt)("li",{parentName:"ul"},"baseFeePerGas: The fixed part of the gas fee. Determined by the network.")))}d.isMDXComponent=!0}}]);