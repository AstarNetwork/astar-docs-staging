"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[3124],{3905:function(t,e,a){a.d(e,{Zo:function(){return p},kt:function(){return u}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),c=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=c(t.components);return n.createElement(l.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=c(a),u=r,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return a?n.createElement(h,i(i({ref:e},p),{},{components:a})):n.createElement(h,i({ref:e},p))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2416:function(t,e,a){a.r(e),a.d(e,{assets:function(){return p},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],s={},l="Astar Wasm Stack",c={unversionedId:"wasm/stack/index",id:"wasm/stack/index",title:"Astar Wasm Stack",description:"Smart Contract Runtime Environment",source:"@site/docs/wasm/stack/index.md",sourceDirName:"wasm/stack",slug:"/wasm/stack/",permalink:"/docs/wasm/stack/",editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/wasm/stack/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Wasm",permalink:"/docs/wasm/"},next:{title:"DSLs",permalink:"/docs/wasm/stack/dsls"}},p={},m=[{value:"Smart Contract Runtime Environment",id:"smart-contract-runtime-environment",level:2},{value:"Gas Model",id:"gas-model",level:3},{value:"Execution Engine",id:"execution-engine",level:3},{value:"Two-step Deployment of Contracts",id:"two-step-deployment-of-contracts",level:3},{value:"Documentation about <code>pallet-contracts</code>",id:"documentation-about-pallet-contracts",level:3},{value:"Smart Contracts",id:"smart-contracts",level:2},{value:"Client APIs",id:"client-apis",level:2},{value:"Stack comparison to Ethereum",id:"stack-comparison-to-ethereum",level:2}],d={toc:m};function u(t){var e=t.components,a=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"astar-wasm-stack"},"Astar Wasm Stack"),(0,o.kt)("h2",{id:"smart-contract-runtime-environment"},"Smart Contract Runtime Environment"),(0,o.kt)("p",null,"Astar & Shiden runtimes are based on Substrate. Both networks incorporate ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts")," to enable Wasm smart-contract capabilities. The ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts")," is a sandbox environment to deploy and execute WebAssembly smart contracts. Any language that compiles to Wasm can be used. But the code should be compatible with ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts")," API."),(0,o.kt)("p",null,"To avoid unnecessary complexity, and boilerplate code, the best way is to use an eDSL that specifically targets the ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts")," like ",(0,o.kt)("inlineCode",{parentName:"p"},"ink!")," (based on Rust) or ",(0,o.kt)("inlineCode",{parentName:"p"},"ask!")," (based on AssemblyScript). More supported language and eDSL will come as the ecosystem grows."),(0,o.kt)("p",null,"The Wasm blob is then deployed and stored on-chain."),(0,o.kt)("h3",{id:"gas-model"},"Gas Model"),(0,o.kt)("p",null,"Similar to Substrate, ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts")," uses ",(0,o.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/concepts/weight/"},"weight")," as a gas model."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"One gas is equivalent to one weight, defined as one picosecond of execution time on the runtime's reference machine.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/concepts/weight/"},"Transaction Weight is Substrate documentation")),(0,o.kt)("p",null,"Additionally to the weight, there is also a fee paid for on-chain storage called ",(0,o.kt)("em",{parentName:"p"},"automatic deposit collection"),". This additional fee is paid by the caller and is calculated with the price set for each storage item ",(0,o.kt)("inlineCode",{parentName:"p"},"DepositPerItem")," and the price charged for each byte of storage ",(0,o.kt)("inlineCode",{parentName:"p"},"DepositPerByte"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"automatic deposit collection")," can be simplified as follows:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"A caller of a contract pays a deposit to each contract in which new storage was created as a result of the executed call. In a similar way, a caller gets a refund from all the contracts that the call removed storage from.")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.parity.io/blog/ink-3-0-paritys-rust-based-language-gets-a-major-update"},"ink! 3.0 Blog Post by Parity")),(0,o.kt)("h3",{id:"execution-engine"},"Execution Engine"),(0,o.kt)("p",null,"Pallet-contracts uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paritytech/wasmi"},"wasmi")," as a wasm-interpreter to execute the smart-contract Wasm blob. Even though there is a faster JIT interpreter like ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bytecodealliance/wasmtime"},"wasmtime")," used in the native runtime, smart contracts are an untrusted environment and that\u2019s why the high degree of correctness of wasmi makes it the best option."),(0,o.kt)("h3",{id:"two-step-deployment-of-contracts"},"Two-step Deployment of Contracts"),(0,o.kt)("p",null,"The contract code (Wasm blob) and the contract address and storage are decoupled from each other. To deploy a non-existing contract on-chain:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"First, upload the Wasm contract on-chain (every contract Wasm code has a ",(0,o.kt)("inlineCode",{parentName:"li"},"code_hash")," as an identifier)."),(0,o.kt)("li",{parentName:"ol"},"Second, instantiate the contract - it will create an address and storage for that contract."),(0,o.kt)("li",{parentName:"ol"},"Anyone can instantiate a contract based on its ",(0,o.kt)("inlineCode",{parentName:"li"},"code_hash"),".")),(0,o.kt)("p",null,"There are several perks of decoupling contract code and address/storage:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"It will save space on-chain. Since a contract can have several constructors and several instantiations, it will just create a new instance based on the same underlying code. Think about standardized tokens, like ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/w3f/PSPs/blob/master/PSPs/psp-22.md"},"PSP22")," & ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/w3f/PSPs/blob/master/PSPs/psp-34.md"},"PSP34"),", that will have one ",(0,o.kt)("inlineCode",{parentName:"li"},"code_hash")," & ",(0,o.kt)("inlineCode",{parentName:"li"},"blob")," leaving on-chain, and as many instantiations as it is needed rather than having code uploaded at each new instantiation (like in Ethereum)."),(0,o.kt)("li",{parentName:"ul"},"To instantiate a contract from within contract code (see delegator example), only ",(0,o.kt)("inlineCode",{parentName:"li"},"code_hash")," needs to be provided."),(0,o.kt)("li",{parentName:"ul"},"Some standards contracts (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/w3f/PSPs/blob/master/PSPs/psp-22.md"},"PSP22"),", ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/w3f/PSPs/blob/master/PSPs/psp-34.md"},"PSP34"),") will only be uploaded on-chain once, preventing users from paying the gas fees of uploading new code."),(0,o.kt)("li",{parentName:"ul"},"Update contract code for an address: replace the contract code at the specified address with a new code (see ",(0,o.kt)("a",{parentName:"li",href:"https://paritytech.github.io/ink/ink_env/fn.set_code_hash.html"},"set_code_hash"),"). Storage and balances will be preserved.")),(0,o.kt)("h3",{id:"documentation-about-pallet-contracts"},"Documentation about ",(0,o.kt)("inlineCode",{parentName:"h3"},"pallet-contracts")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.substrate.io/v3/runtime/smart-contracts/"},(0,o.kt)("inlineCode",{parentName:"a"},"pallet-contracts")," in Substrate documentation")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/paritytech/substrate/tree/master/frame/contracts"},(0,o.kt)("inlineCode",{parentName:"a"},"pallet-contract")," on Github"))),(0,o.kt)("h2",{id:"smart-contracts"},"Smart Contracts"),(0,o.kt)("p",null,"To facilitate development it is better to use a language targeting specifically ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contracts"),"."),(0,o.kt)("p",null,"There are two eDSLs currently available"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/paritytech/ink"},"ink!")," written in Rust"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ask-lang/ask"},"ask!")," written in AssemblyScript")),(0,o.kt)("h2",{id:"client-apis"},"Client APIs"),(0,o.kt)("p",null,"The only library available to communicate with smart contracts is ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/polkadot-js/api"},"PolkadotJS API"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API provides application developers the ability to query a node and interact with the Polkadot or Substrate chains using Javascript.")),(0,o.kt)("p",null,"Parity also developed a web application to interact with contracts called ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/paritytech/contracts-ui"},"contracts-ui"),"."),(0,o.kt)("h2",{id:"stack-comparison-to-ethereum"},"Stack comparison to Ethereum"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null},"Ethereum"),(0,o.kt)("th",{parentName:"tr",align:null},"Astar"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"L1 Architecture"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://ethereum.org/en/developers/docs/nodes-and-clients/"},"Ethereum clients")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://substrate.io/"},"Substrate"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Smart Contract Runtime Environment"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://ethereum.org/en/developers/docs/evm/"},"EVM")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/paritytech/substrate/tree/master/frame/contracts"},"pallet-contract"),", EVM via ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/paritytech/frontier"},"frontier"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Gas Model"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://ethereum.github.io/yellowpaper/paper.pdf"},"fixed price per instruction")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://docs.substrate.io/v3/concepts/weight/"},"weight")," + ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/paritytech/substrate/blob/c00ed052e7cd72cfc4bc0e00e38722081b789ff5/frame/contracts/src/lib.rs#L351"},"storage fees"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Smart Contract DSLs"),(0,o.kt)("td",{parentName:"tr",align:null},"Solidity and Vyper"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/paritytech/ink"},"ink!")," (Rust) and ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/ask-lang/ask"},"ask!")," (AssemblyScript)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Standards"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/"},"EIPs")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/w3f/PSPs"},"PSPs"))))))}u.isMDXComponent=!0}}]);